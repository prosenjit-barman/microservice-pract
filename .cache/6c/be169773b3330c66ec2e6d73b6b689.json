{"id":"../../node_modules/a_test/dist/arrangeActChain.js","dependencies":[{"name":"C:\\Users\\AJ Technology\\Downloads\\Natours\\node_modules\\a_test\\dist\\arrangeActChain.js.map","includedInParent":true,"mtime":1656481647848},{"name":"C:\\Users\\AJ Technology\\Downloads\\Natours\\package.json","includedInParent":true,"mtime":1656481648663},{"name":"C:\\Users\\AJ Technology\\Downloads\\Natours\\node_modules\\a_test\\package.json","includedInParent":true,"mtime":1656481645578},{"name":"C:\\Users\\AJ Technology\\Downloads\\Natours\\node_modules\\a_test\\.babelrc","includedInParent":true,"mtime":1656481647862}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step(\"next\", value); }, function (err) { step(\"throw\", err); }); } } return step(\"next\"); }); }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ArrangeActChain = function () {\n    function ArrangeActChain() {\n        _classCallCheck(this, ArrangeActChain);\n    }\n\n    _createClass(ArrangeActChain, [{\n        key: \"setup\",\n        value: function setup(actList, context) {\n            this._actList = actList;\n            this._context = context;\n        }\n    }, {\n        key: \"execute\",\n        value: function () {\n            var _ref = _asyncToGenerator(function* () {\n                var _iteratorNormalCompletion = true;\n                var _didIteratorError = false;\n                var _iteratorError = undefined;\n\n                try {\n                    for (var _iterator = this._actList[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                        var act = _step.value;\n\n                        yield act(this._context);\n                    }\n                } catch (err) {\n                    _didIteratorError = true;\n                    _iteratorError = err;\n                } finally {\n                    try {\n                        if (!_iteratorNormalCompletion && _iterator.return) {\n                            _iterator.return();\n                        }\n                    } finally {\n                        if (_didIteratorError) {\n                            throw _iteratorError;\n                        }\n                    }\n                }\n            });\n\n            function execute() {\n                return _ref.apply(this, arguments);\n            }\n\n            return execute;\n        }()\n    }, {\n        key: \"executeSync\",\n        value: function executeSync() {\n            var _this = this;\n\n            this._actList.forEach(function (act) {\n                act(_this._context);\n            });\n        }\n    }, {\n        key: \"actList\",\n        get: function get() {\n            return this._actList;\n        }\n    }, {\n        key: \"context\",\n        get: function get() {\n            return this._context;\n        }\n    }]);\n\n    return ArrangeActChain;\n}();\n\nexports.default = ArrangeActChain;\n"},"sourceMaps":{"js":{"version":3,"sources":["../src/arrangeActChain.js"],"names":["ArrangeActChain","actList","context","_actList","_context","act","forEach"],"mappings":";;;;;;;;;;;;IAAqBA,e;;;;;;;8BAEXC,O,EAASC,O,EAAS;AACpB,iBAAKC,QAAL,GAAgBF,OAAhB;AACA,iBAAKG,QAAL,GAAgBF,OAAhB;AACH;;;;sDAUe;AAAA;AAAA;AAAA;;AAAA;AACZ,yCAAgB,KAAKC,QAArB,8HAA+B;AAAA,4BAAtBE,GAAsB;;AAC3B,8BAAMA,IAAI,KAAKD,QAAT,CAAN;AACH;AAHW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIf,a;;;;;;;;;;sCAEa;AAAA;;AACV,iBAAKD,QAAL,CAAcG,OAAd,CAAsB,eAAO;AACzBD,oBAAI,MAAKD,QAAT;AACH,aAFD;AAGH;;;4BAlBa;AACV,mBAAO,KAAKD,QAAZ;AACH;;;4BAEa;AACV,mBAAO,KAAKC,QAAZ;AACH;;;;;;kBAbgBJ,e","file":"arrangeActChain.js","sourcesContent":["export default class ArrangeActChain {\n\n    setup(actList, context) {\n        this._actList = actList;\n        this._context = context;\n    }\n\n    get actList() {\n        return this._actList;\n    }\n\n    get context() {\n        return this._context;\n    }\n\n    async execute() {\n        for (let act of this._actList) {\n            await act(this._context);\n        }\n    }\n\n    executeSync() {\n        this._actList.forEach(act => {\n            act(this._context);\n        });\n    }\n\n}\n"]}},"error":null,"hash":"95dec7c4f7dd896df26ceada4288514f","cacheData":{"env":{}}}