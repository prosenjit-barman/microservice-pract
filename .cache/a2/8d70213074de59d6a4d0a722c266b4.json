{"id":"../../node_modules/a_test/dist/convention.js","dependencies":[{"name":"C:\\Users\\AJ Technology\\Downloads\\Natours\\node_modules\\a_test\\dist\\convention.js.map","includedInParent":true,"mtime":1656481646978},{"name":"C:\\Users\\AJ Technology\\Downloads\\Natours\\package.json","includedInParent":true,"mtime":1656481648663},{"name":"C:\\Users\\AJ Technology\\Downloads\\Natours\\node_modules\\a_test\\package.json","includedInParent":true,"mtime":1656481645578},{"name":"C:\\Users\\AJ Technology\\Downloads\\Natours\\node_modules\\a_test\\.babelrc","includedInParent":true,"mtime":1656481647862},{"name":"./fsHelper","loc":{"line":9,"column":24},"parent":"C:\\Users\\AJ Technology\\Downloads\\Natours\\node_modules\\a_test\\dist\\convention.js","resolved":"C:\\Users\\AJ Technology\\Downloads\\Natours\\node_modules\\a_test\\dist\\fsHelper.js"},{"name":"path","loc":{"line":13,"column":20},"parent":"C:\\Users\\AJ Technology\\Downloads\\Natours\\node_modules\\a_test\\dist\\convention.js","resolved":"C:\\Users\\AJ Technology\\Downloads\\Natours\\node_modules\\path-browserify\\index.js"},{"name":"./nameHelper","loc":{"line":17,"column":26},"parent":"C:\\Users\\AJ Technology\\Downloads\\Natours\\node_modules\\a_test\\dist\\convention.js","resolved":"C:\\Users\\AJ Technology\\Downloads\\Natours\\node_modules\\a_test\\dist\\nameHelper.js"}],"generated":{"js":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _fsHelper = require('./fsHelper');\n\nvar _fsHelper2 = _interopRequireDefault(_fsHelper);\n\nvar _path = require('path');\n\nvar _path2 = _interopRequireDefault(_path);\n\nvar _nameHelper = require('./nameHelper');\n\nvar _nameHelper2 = _interopRequireDefault(_nameHelper);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Convention = function () {\n    function Convention() {\n        var fsHelper = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new _fsHelper2.default();\n\n        _classCallCheck(this, Convention);\n\n        this._fsHelper = fsHelper;\n    }\n\n    _createClass(Convention, [{\n        key: 'getSuiteBasePath',\n        value: function getSuiteBasePath(suiteModulePath) {\n            var suiteDirname = _path2.default.dirname(suiteModulePath),\n                baseActFilename = _nameHelper2.default.getSuiteBaseFilename(suiteModulePath);\n\n            var baseActInSameDir = _path2.default.join(suiteDirname, baseActFilename);\n            if (this._fsHelper.exists(baseActInSameDir)) {\n                return baseActInSameDir;\n            }\n\n            return this._tryGetFromParentHierarchy(suiteModulePath);\n        }\n    }, {\n        key: 'getActBasePath',\n        value: function getActBasePath(actPath) {\n            return this._tryGetFromParentHierarchy(actPath);\n        }\n    }, {\n        key: '_tryGetFromParentHierarchy',\n        value: function _tryGetFromParentHierarchy(modulePath) {\n            var relevantDirs = this._fsHelper.getRelevantDirs(modulePath);\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n                for (var _iterator = relevantDirs[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                    var dir = _step.value;\n\n                    if (_nameHelper2.default.isTopFolder(dir)) continue;\n\n                    var candidatePath = this._tryGetByNameMatchingParentDir(dir);\n                    if (candidatePath) return candidatePath;\n\n                    candidatePath = this._tryGetLoneActInParent(dir);\n                    if (candidatePath) return candidatePath;\n                }\n            } catch (err) {\n                _didIteratorError = true;\n                _iteratorError = err;\n            } finally {\n                try {\n                    if (!_iteratorNormalCompletion && _iterator.return) {\n                        _iterator.return();\n                    }\n                } finally {\n                    if (_didIteratorError) {\n                        throw _iteratorError;\n                    }\n                }\n            }\n        }\n    }, {\n        key: '_tryGetByNameMatchingParentDir',\n        value: function _tryGetByNameMatchingParentDir(dir) {\n            var candidatePath = dir + '.js';\n            if (this._fsHelper.exists(candidatePath)) {\n                return candidatePath;\n            }\n        }\n    }, {\n        key: '_tryGetLoneActInParent',\n        value: function _tryGetLoneActInParent(dir) {\n            var parentDir = _path2.default.resolve(_path2.default.join(dir, '..'));\n            var filenames = this._fsHelper.getFilesInDir(parentDir);\n\n            var candidateFilename = _nameHelper2.default.getSingleActFilename(filenames);\n            if (candidateFilename) {\n                return _path2.default.join(parentDir, candidateFilename);\n            }\n        }\n    }]);\n\n    return Convention;\n}();\n\nexports.default = Convention;\n"},"sourceMaps":{"js":{"version":3,"sources":["../src/convention.js"],"names":["Convention","fsHelper","_fsHelper","suiteModulePath","suiteDirname","dirname","baseActFilename","getSuiteBaseFilename","baseActInSameDir","join","exists","_tryGetFromParentHierarchy","actPath","modulePath","relevantDirs","getRelevantDirs","dir","isTopFolder","candidatePath","_tryGetByNameMatchingParentDir","_tryGetLoneActInParent","parentDir","resolve","filenames","getFilesInDir","candidateFilename","getSingleActFilename"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;;;IAEqBA,U;AAEjB,0BAAuC;AAAA,YAA3BC,QAA2B,uEAAhB,wBAAgB;;AAAA;;AACnC,aAAKC,SAAL,GAAiBD,QAAjB;AACH;;;;yCAEgBE,e,EAAiB;AAC9B,gBAAIC,eAAe,eAAKC,OAAL,CAAaF,eAAb,CAAnB;AAAA,gBACIG,kBAAkB,qBAAWC,oBAAX,CAAgCJ,eAAhC,CADtB;;AAGA,gBAAIK,mBAAmB,eAAKC,IAAL,CAAUL,YAAV,EAAwBE,eAAxB,CAAvB;AACA,gBAAI,KAAKJ,SAAL,CAAeQ,MAAf,CAAsBF,gBAAtB,CAAJ,EAA6C;AACzC,uBAAOA,gBAAP;AACH;;AAED,mBAAO,KAAKG,0BAAL,CAAgCR,eAAhC,CAAP;AACH;;;uCAIcS,O,EAAS;AACpB,mBAAO,KAAKD,0BAAL,CAAgCC,OAAhC,CAAP;AACH;;;mDAE0BC,U,EAAY;AACnC,gBAAIC,eAAe,KAAKZ,SAAL,CAAea,eAAf,CAA+BF,UAA/B,CAAnB;AADmC;AAAA;AAAA;;AAAA;AAEnC,qCAAgBC,YAAhB,8HAA8B;AAAA,wBAArBE,GAAqB;;AAC1B,wBAAI,qBAAWC,WAAX,CAAuBD,GAAvB,CAAJ,EACI;;AAEJ,wBAAIE,gBAAgB,KAAKC,8BAAL,CAAoCH,GAApC,CAApB;AACA,wBAAIE,aAAJ,EACI,OAAOA,aAAP;;AAEJA,oCAAgB,KAAKE,sBAAL,CAA4BJ,GAA5B,CAAhB;AACA,wBAAIE,aAAJ,EACI,OAAOA,aAAP;AACP;AAbkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AActC;;;uDAE8BF,G,EAAK;AAChC,gBAAIE,gBAAmBF,GAAnB,QAAJ;AACA,gBAAI,KAAKd,SAAL,CAAeQ,MAAf,CAAsBQ,aAAtB,CAAJ,EAA0C;AACtC,uBAAOA,aAAP;AACH;AACJ;;;+CAEsBF,G,EAAK;AACxB,gBAAIK,YAAY,eAAKC,OAAL,CAAa,eAAKb,IAAL,CAAUO,GAAV,EAAe,IAAf,CAAb,CAAhB;AACA,gBAAIO,YAAY,KAAKrB,SAAL,CAAesB,aAAf,CAA6BH,SAA7B,CAAhB;;AAEA,gBAAII,oBAAoB,qBAAWC,oBAAX,CAAgCH,SAAhC,CAAxB;AACA,gBAAIE,iBAAJ,EAAuB;AACnB,uBAAO,eAAKhB,IAAL,CAAUY,SAAV,EAAqBI,iBAArB,CAAP;AACH;AAEJ;;;;;;kBAxDgBzB,U","file":"convention.js","sourcesContent":["import FsHelper from './fsHelper';\nimport path from 'path';\nimport nameHelper from './nameHelper';\n\nexport default class Convention {\n\n    constructor(fsHelper = new FsHelper()) {\n        this._fsHelper = fsHelper;\n    }\n\n    getSuiteBasePath(suiteModulePath) {\n        let suiteDirname = path.dirname(suiteModulePath),\n            baseActFilename = nameHelper.getSuiteBaseFilename(suiteModulePath);\n\n        let baseActInSameDir = path.join(suiteDirname, baseActFilename);\n        if (this._fsHelper.exists(baseActInSameDir)) {\n            return baseActInSameDir;\n        }\n\n        return this._tryGetFromParentHierarchy(suiteModulePath);\n    }\n\n\n\n    getActBasePath(actPath) {\n        return this._tryGetFromParentHierarchy(actPath);\n    }\n\n    _tryGetFromParentHierarchy(modulePath) {\n        let relevantDirs = this._fsHelper.getRelevantDirs(modulePath);\n        for (let dir of relevantDirs) {\n            if (nameHelper.isTopFolder(dir))\n                continue;\n\n            let candidatePath = this._tryGetByNameMatchingParentDir(dir);\n            if (candidatePath)\n                return candidatePath;\n\n            candidatePath = this._tryGetLoneActInParent(dir);\n            if (candidatePath)\n                return candidatePath;\n        }\n    }\n\n    _tryGetByNameMatchingParentDir(dir) {\n        let candidatePath = `${dir}.js`;\n        if (this._fsHelper.exists(candidatePath)) {\n            return candidatePath;\n        }\n    }\n\n    _tryGetLoneActInParent(dir) {\n        let parentDir = path.resolve(path.join(dir, '..'));\n        let filenames = this._fsHelper.getFilesInDir(parentDir);\n\n        let candidateFilename = nameHelper.getSingleActFilename(filenames);\n        if (candidateFilename) {\n            return path.join(parentDir, candidateFilename);\n        }\n\n    }\n}"]}},"error":null,"hash":"9498df90c97aabe93d01ac72cdd760f0","cacheData":{"env":{}}}